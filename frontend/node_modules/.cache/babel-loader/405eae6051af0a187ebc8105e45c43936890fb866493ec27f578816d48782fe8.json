{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thenu\\\\Documents\\\\Test\\\\NourishLanka-Food_Donation_System-MERN\\\\frontend\\\\src\\\\context\\\\InventoryContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer } from 'react';\n\n// Creating context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InventorysContext = /*#__PURE__*/createContext();\n\n// Reducer function\nexport const inventorysReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_INVENTORYS':\n      return {\n        ...state,\n        inventorys: action.payload\n      };\n    case 'CREATE_INVENTORY':\n      return {\n        ...state,\n        inventorys: [action.payload, ...state.inventorys]\n      };\n    case 'DELETE_INVENTORY':\n      return {\n        ...state,\n        inventorys: state.inventorys.filter(inventory => inventory._id !== action.payload._id)\n      };\n    case 'UPDATE_INVENTORY':\n      return {\n        ...state,\n        inventorys: state.inventorys.map(inventory => inventory._id === action.payload._id ? action.payload : inventory)\n      };\n    case 'SET_INVENTORY':\n      return {\n        ...state,\n        inventorys: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n// Custom hook to access context\nexport const useInventorysContext = () => {\n  _s();\n  return useContext(InventorysContext);\n};\n\n// Provider component\n_s(useInventorysContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const InventorysContextProvider = ({\n  children\n}) => {\n  _s2();\n  const initialState = {\n    inventorys: null\n  };\n  const [state, dispatch] = useReducer(inventorysReducer, initialState);\n  return /*#__PURE__*/_jsxDEV(InventorysContext.Provider, {\n    value: {\n      ...state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s2(InventorysContextProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = InventorysContextProvider;\nvar _c;\n$RefreshReg$(_c, \"InventorysContextProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","jsxDEV","_jsxDEV","InventorysContext","inventorysReducer","state","action","type","inventorys","payload","filter","inventory","_id","map","useInventorysContext","_s","InventorysContextProvider","children","_s2","initialState","dispatch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/thenu/Documents/Test/NourishLanka-Food_Donation_System-MERN/frontend/src/context/InventoryContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\r\n\r\n// Creating context\r\nexport const InventorysContext = createContext();\r\n\r\n// Reducer function\r\nexport const inventorysReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'SET_INVENTORYS':\r\n            return {\r\n                ...state,\r\n                inventorys: action.payload\r\n            };\r\n        case 'CREATE_INVENTORY':\r\n            return {\r\n                ...state,\r\n                inventorys: [action.payload, ...state.inventorys]\r\n            };\r\n        case 'DELETE_INVENTORY':\r\n            return {\r\n                ...state,\r\n                inventorys: state.inventorys.filter(inventory => inventory._id !== action.payload._id)\r\n            };\r\n        case 'UPDATE_INVENTORY':\r\n            return {\r\n                ...state,\r\n                inventorys: state.inventorys.map(inventory =>\r\n                    inventory._id === action.payload._id ? action.payload : inventory\r\n                )\r\n            };\r\n            case 'SET_INVENTORY':\r\n                return {\r\n                    ...state,\r\n                    inventorys: action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Custom hook to access context\r\nexport const useInventorysContext = () => useContext(InventorysContext);\r\n\r\n// Provider component\r\nexport const InventorysContextProvider = ({ children }) => {\r\n    const initialState = {\r\n        inventorys: null\r\n    };\r\n\r\n    const [state, dispatch] = useReducer(inventorysReducer, initialState);\r\n\r\n    return (\r\n        <InventorysContext.Provider value={{ ...state, dispatch }}>\r\n            {children}\r\n        </InventorysContext.Provider>\r\n    );\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,UAAU,QAAQ,OAAO;;AAEpE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,iBAAiB,gBAAGL,aAAa,CAAC,CAAC;;AAEhD;AACA,OAAO,MAAMM,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAChD,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,gBAAgB;MACjB,OAAO;QACH,GAAGF,KAAK;QACRG,UAAU,EAAEF,MAAM,CAACG;MACvB,CAAC;IACL,KAAK,kBAAkB;MACnB,OAAO;QACH,GAAGJ,KAAK;QACRG,UAAU,EAAE,CAACF,MAAM,CAACG,OAAO,EAAE,GAAGJ,KAAK,CAACG,UAAU;MACpD,CAAC;IACL,KAAK,kBAAkB;MACnB,OAAO;QACH,GAAGH,KAAK;QACRG,UAAU,EAAEH,KAAK,CAACG,UAAU,CAACE,MAAM,CAACC,SAAS,IAAIA,SAAS,CAACC,GAAG,KAAKN,MAAM,CAACG,OAAO,CAACG,GAAG;MACzF,CAAC;IACL,KAAK,kBAAkB;MACnB,OAAO;QACH,GAAGP,KAAK;QACRG,UAAU,EAAEH,KAAK,CAACG,UAAU,CAACK,GAAG,CAACF,SAAS,IACtCA,SAAS,CAACC,GAAG,KAAKN,MAAM,CAACG,OAAO,CAACG,GAAG,GAAGN,MAAM,CAACG,OAAO,GAAGE,SAC5D;MACJ,CAAC;IACD,KAAK,eAAe;MAChB,OAAO;QACH,GAAGN,KAAK;QACRG,UAAU,EAAEF,MAAM,CAACG;MACvB,CAAC;IACT;MACI,OAAOJ,KAAK;EACpB;AACJ,CAAC;;AAED;AACA,OAAO,MAAMS,oBAAoB,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMhB,UAAU,CAACI,iBAAiB,CAAC;AAAA;;AAEvE;AAAAY,EAAA,CAFaD,oBAAoB;AAGjC,OAAO,MAAME,yBAAyB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACvD,MAAMC,YAAY,GAAG;IACjBX,UAAU,EAAE;EAChB,CAAC;EAED,MAAM,CAACH,KAAK,EAAEe,QAAQ,CAAC,GAAGpB,UAAU,CAACI,iBAAiB,EAAEe,YAAY,CAAC;EAErE,oBACIjB,OAAA,CAACC,iBAAiB,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAE,GAAGjB,KAAK;MAAEe;IAAS,CAAE;IAAAH,QAAA,EACrDA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAErC,CAAC;AAACR,GAAA,CAZWF,yBAAyB;AAAAW,EAAA,GAAzBX,yBAAyB;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}