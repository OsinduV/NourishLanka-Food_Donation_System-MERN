{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thenu\\\\Documents\\\\GitHub\\\\Food-Donation-System-MERN\\\\frontend\\\\src\\\\components\\\\EditInventoryForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useInventorysContext } from '../hooks/useInventorysContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditInventoryForm = ({\n  inventory,\n  setEditMode\n}) => {\n  _s();\n  const {\n    dispatch\n  } = useInventorysContext();\n  const [title, setTitle] = useState('');\n  const [desc1, setDesc1] = useState('');\n  const [desc2, setDesc2] = useState('');\n  useEffect(() => {\n    if (inventory) {\n      setTitle(inventory.title);\n      setDesc1(inventory.desc1);\n      setDesc2(inventory.desc2);\n    }\n  }, [inventory]);\n\n  // Function to handle form submission for updating an inventory\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const updatedInventory = {\n      title,\n      desc1,\n      desc2\n    };\n    try {\n      const response = await fetch(`/api/inventorys/${inventory._id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedInventory)\n      });\n      if (response.ok) {\n        const updatedInventoryData = await response.json();\n        dispatch({\n          type: 'UPDATE_INVENTORY',\n          payload: updatedInventoryData\n        });\n        setEditMode(null); // Exit edit mode by resetting the selected inventory\n      } else {\n        const errorData = await response.json();\n        console.error('Error updating inventory:', errorData.error);\n      }\n    } catch (error) {\n      console.error('Error updating inventory:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"workout-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Edit Inventory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Inventory Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: desc1,\n      onChange: e => setDesc1(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Additional Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: desc2,\n      onChange: e => setDesc2(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Update Detail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(EditInventoryForm, \"RQs3V+13IlOXh3fF4HWEaHELo5E=\", false, function () {\n  return [useInventorysContext];\n});\n_c = EditInventoryForm;\nexport default EditInventoryForm;\nvar _c;\n$RefreshReg$(_c, \"EditInventoryForm\");","map":{"version":3,"names":["React","useState","useEffect","useInventorysContext","jsxDEV","_jsxDEV","EditInventoryForm","inventory","setEditMode","_s","dispatch","title","setTitle","desc1","setDesc1","desc2","setDesc2","handleSubmit","e","preventDefault","updatedInventory","response","fetch","_id","method","headers","body","JSON","stringify","ok","updatedInventoryData","json","type","payload","errorData","console","error","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/thenu/Documents/GitHub/Food-Donation-System-MERN/frontend/src/components/EditInventoryForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useInventorysContext } from '../hooks/useInventorysContext';\r\n\r\nconst EditInventoryForm = ({ inventory, setEditMode }) => {\r\n    const { dispatch } = useInventorysContext();\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [desc1, setDesc1] = useState('');\r\n    const [desc2, setDesc2] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (inventory) {\r\n            setTitle(inventory.title);\r\n            setDesc1(inventory.desc1);\r\n            setDesc2(inventory.desc2);\r\n        }\r\n    }, [inventory]);\r\n\r\n    // Function to handle form submission for updating an inventory\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const updatedInventory = { title, desc1, desc2 };\r\n\r\n        try {\r\n            const response = await fetch(`/api/inventorys/${inventory._id}`, {\r\n                method: 'PATCH',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(updatedInventory),\r\n            });\r\n\r\n            if (response.ok) {\r\n                const updatedInventoryData = await response.json();\r\n                dispatch({ type: 'UPDATE_INVENTORY', payload: updatedInventoryData });\r\n                setEditMode(null); // Exit edit mode by resetting the selected inventory\r\n            } else {\r\n                const errorData = await response.json();\r\n                console.error('Error updating inventory:', errorData.error);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating inventory:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form className=\"workout-form\" onSubmit={handleSubmit}>\r\n            <h3>Edit Inventory</h3>\r\n            <label>Inventory Title</label>\r\n            <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n            <label>Description</label>\r\n            <input type=\"text\" value={desc1} onChange={(e) => setDesc1(e.target.value)} />\r\n            <label>Additional Information</label>\r\n            <input type=\"text\" value={desc2} onChange={(e) => setDesc2(e.target.value)} />\r\n            <button type=\"submit\">Update Detail</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default EditInventoryForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}